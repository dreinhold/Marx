/* Getting all the client stuff ready */
	uint loopPthreadCounter = 0;
	int sockfd, portno, n;
	struct sockaddr_in serv_addr;
	struct hostent *server;
	char boolBreakLoop = -1;
	char *boolBreakLoopPtr = &boolBreakLoop;
	char buffer[256];
	portno = portNum; //easily just assigns the constant port number
	sockfd = socket(AF_INET, SOCK_STREAM, 0);
	if (sockfd < 0)
	{
	quitWithError("ERROR opening socket");
	}
	
	
		server = gethostbyname(argv[1]); //this function assigns the hostname to the server pointer
		if (server == NULL)
		{
		  quitWithError("ERROR, no such host");
		  exit(0);
		}
		
				bzero((char *) &serv_addr, sizeof(serv_addr));
				serv_addr.sin_family = AF_INET;
				bcopy((char *)server->h_addr,(char *)&serv_addr.sin_addr.s_addr,server->h_length);
				serv_addr.sin_port = htons(portno);
	
				if (connect(sockfd,(struct sockaddr *)&serv_addr,sizeof(serv_addr)) < 0) //this needed to be casted right here
				{
					quitWithError("ERROR connecting");
				}
				
					//~ printf("Please enter the message: ");
				  int sendVar = ZERO_OUT_VALUE;
				  int *sendVarPtr = &sendVar;
				  
				  int recieveVar = ZERO_OUT_VALUE;
				  int *recieveVarPtr = &recieveVar;
		
				  sendVar = QUEUE_JOBS;
				  
				  send(sockfd,sendVarPtr,sizeof(int),0);
				  //~ SEND_PRIORITY_NUM
				  //~ SEND_DIRECTIVE
				  //~ READY_FOR_JOBS
				  recv(sockfd,recieveVarPtr,sizeof(int),0);
				  if (recieveVar == SEND_PRIORITY_NUM)
				  {
					  sendMessage(sockfd,"3");
				
				  }
				  
				  recv(sockfd,recieveVarPtr,sizeof(int),0);
				  if (recieveVar == SEND_DIRECTIVE)
				  {
					  
						sendVar = ROUND_ROBIN;
				  
						send(sockfd,sendVarPtr,sizeof(int),0);
					  //~ sendMessage(sockfd,"procinfo");
				
				  }
				  
				  recv(sockfd,recieveVarPtr,sizeof(int),0);
				  
				  if (recieveVar == READY_FOR_JOBS)
				  {
					  int i = 2;
					  for (; i < argc; i++)
					  {
						  sendMessage(sockfd,argv[i]);
						  recv(sockfd,recieveVarPtr,sizeof(int),0);
						   if (recieveVar == RECIEVED_OK)
							{
								sendVar = ZERO_OUT_VALUE;
								continue;
							}
					  }
					  //~ sendMessage(sockfd,"procinfo");
					   //~ 
					   //~ recv(sockfd,recieveVarPtr,sizeof(int),0);
					   //~ 
					   //~ if (recieveVar == RECIEVED_OK)
					   //~ {
						//~ sendVar = ZERO_OUT_VALUE;
						//~ send(sockfd,sendVarPtr,sizeof(int),0);
						//~ sendMessage(sockfd,"uname -rms");   
					   //~ }
					   //~ recv(sockfd,recieveVarPtr,sizeof(int),0);
					   //~ 
					   //~ if (recieveVar == RECIEVED_OK)
					   //~ {
						//~ sendVar = ZERO_OUT_VALUE;
						//~ send(sockfd,sendVarPtr,sizeof(int),0);
						//~ sendMessage(sockfd,"ps -A");
					   //~ }
					   //~ 
					   //~ recv(sockfd,recieveVarPtr,sizeof(int),0);
					   if (recieveVar == RECIEVED_OK)
					   {
						sendVar = QUEUE_JOBS_END;
						send(sockfd,sendVarPtr,sizeof(int),0);
					
					   }
					  
				
				  }
				  
				
				 
				close(sockfd);
				
				

